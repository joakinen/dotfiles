"
" VIM CONFIGURATION
" Tested on Vim 7.x and 8.x in terminals on Linux, OpenBSD
" and Mac OS X.
"
" Quick tip: Reload this file by running ":so %", meaning source
" the currently open file.


"
" BEHAVIOR
"

set nocompatible
call pathogen#infect()
call pathogen#infect('custom_bundles{}')

syntax on
filetype plugin indent on

set hidden
set encoding=utf-8
set showcmd
set wildmode=list:longest
set backupdir=~/.vim/backup
set directory=~/.vim/tmp

set expandtab
set tabstop=4 shiftwidth=4
set backspace=indent,eol,start

set scrolloff=5
set laststatus=2
" StatusLine format: <Syntax check> %= <Filename> : <Line number>, <Character>
set statusline=%{SyntasticStatuslineFlag()}\ \ %=%t%m\:%l\,%c

let NERDTreeShowHidden=1

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:syntastic_error_symbol='>'
let g:syntastic_warning_symbol='!'
let g:syntastic_auto_jump=0

let g:syntastic_sh_checkers = ['sh', 'shellcheck']
let g:syntastic_go_checkers = ['go', 'gofmt', 'golint']

" FZF (replaces Ctrl-P, FuzzyFinder and Command-T)
" Requires FZF Github repo checked out in ~/.fzf.
" set rtp+=~/.fzf

set hlsearch
set incsearch
set ignorecase
set smartcase
set wrapscan

autocmd BufEnter * syn match ErrorMsg /[^\x00-\x7F]/

"
" APPEARANCE
"
set background=dark
colorscheme solarized

hi clear Normal
"" OpenBSD terminal requires ctermbg=NONE or equivalent.
hi Normal ctermfg=12 ctermbg=8
highlight LineNr term=bold cterm=NONE ctermfg=DarkGrey ctermbg=NONE

au VimEnter * syntax keyword Statement lambda conceal cchar=Î»
au VimEnter * hi! link Conceal Statement
au VimEnter * set conceallevel=2
hi StatusLine                  ctermfg=10     ctermbg=8     cterm=NONE
" hi markdownItalic              ctermfg=NONE ctermbg=NONE cterm=NONE
hi goString ctermfg=11 ctermbg=0 cterm=NONE
hi link goDecimalInt   Normal
hi link goSignedInts   Normal
hi link goBoolean      Normal
hi link goType         Normal
hi link goRawString    String
hi link Constant       String
hi link goFormatSpecifier Normal
hi link goEscapeC      Normal
hi link markdownItalic Normal


" Tagbar
hi TagbarKind ctermfg=NONE cterm=NONE
hi TagbarScope ctermfg=NONE cterm=NONE
hi TagbarSignature ctermfg=NONE cterm=NONE
hi TagbarType ctermfg=NONE cterm=NONE
hi ErrorMsg ctermfg=NONE cterm=NONE


"
" KEYS
"

let mapleader = "\<Space>"

map <leader>g :Commentary<cr>

" File, tag and buffer management
map <leader>N :NERDTreeFind<cr>
map <leader>/ :TagbarToggle<cr>
map <leader>n :NERDTreeToggle<cr>
map <leader>. :bn<cr>
map <leader>m :bp<cr>

nmap <leader>w :w<CR>
nmap <leader>x :x<CR>
nmap <leader>q :q!<CR>

" Use FZF for navigation
nmap <leader>b :Buffers<CR>
nmap <leader>t :Tags<CR>
nmap <leader>f :Files<CR>


"" Go settings
au FileType go nmap <leader>r <Plug>(go-run)

" Use JavaScript syntax highlighting for JSON
autocmd BufNewFile,BufRead *.json set ft=javascript


""
"" FUNCTIONS
""

function! GetSyntaxID()
  return synID(line('.'), col('.'), 1)
endfunction

function! GetSyntaxParentID()
  return synIDtrans(GetSyntaxID())
endfunction

function! GetSyntax()
  echo synIDattr(GetSyntaxID(), 'name')
  exec "hi ".synIDattr(GetSyntaxParentID(), 'name')
endfunction


""
"" TESTING AREA
""

map <leader>c :Commentary<cr>


